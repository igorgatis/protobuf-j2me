// Generated by the protocol buffer compiler.  DO NOT EDIT!

public  final class SingleMessage extends
    com.google.protobuf.Message {
  private int set_mask_0_;
  public SingleMessage() {
    super("SingleMessage");
    initFields();
  }
  private SingleMessage(boolean noInit) { super(true); }
  
  private static final SingleMessage defaultInstance;
  public static SingleMessage getDefaultInstance() {
    return defaultInstance;
  }
  
  public SingleMessage getDefaultInstanceForType() {
    return defaultInstance;
  }
  
  // required .EmptyMessage req_msg = 1;
  private EmptyMessage reqMsg_;
  public EmptyMessage getReqMsg() { return reqMsg_; }
  public boolean hasReqMsg() { return (set_mask_0_ & 1) != 0; }
  public void clearReqMsg() {
    assertNotReadOnly();
    set_mask_0_ &= ~1;
    reqMsg_ = EmptyMessage.getDefaultInstance();
  }
  public void setReqMsg(EmptyMessage value) {
    assertNotReadOnly();
    if (value == null) {
      throw new NullPointerException();
    }
    set_mask_0_ |= 1;
    reqMsg_ = value;
  }
  
  private void initFields() {
    reqMsg_ = EmptyMessage.getDefaultInstance();
  }
  public final boolean isInitialized() {
    if (!hasReqMsg()) return false;
    return true;
  }
  
  public boolean equals(Object obj) {
    if (this == obj) return true;
    if (!(obj instanceof SingleMessage)) return false;
    SingleMessage msg = (SingleMessage)obj;
    if (!reqMsg_.equals(msg.reqMsg_)) {
      return false;
    }
    return true;
  }
  
  public int hashCode() {
    int hash = 41 * getClass().getName().hashCode();
    if (hasReqMsg())   hash += 31 * reqMsg_.hashCode();
    return hash;
  }
  
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hasReqMsg()) {
      output.writeMessage(1, getReqMsg());
    }
  }
  
  public int getSerializedSize() {
    int size = 0;
    if (hasReqMsg()) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getReqMsg());
    }
    return size;
  }
  
  public static SingleMessage parseFrom(
      java.io.InputStream input)
      throws java.io.IOException {
    com.google.protobuf.CodedInputStream codedInput =
        com.google.protobuf.CodedInputStream.newInstance(input);
    return parseFrom(codedInput);
  }
  
  public static SingleMessage parseFrom(
      com.google.protobuf.CodedInputStream codedInput)
      throws java.io.IOException {
    SingleMessage proto = new SingleMessage();
    proto.mergeFrom(codedInput);
    return proto;
  }
  
  public com.google.protobuf.Message newInstance() {
    return new SingleMessage();
  }
  
  public void mergeFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    assertNotReadOnly();
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return;
        default: {
          if (!parseUnknownField(input, tag)) {
            return;
          }
          break;
        }
        case 10: {
          if (!hasReqMsg()) {
            setReqMsg(new EmptyMessage());
          }
          input.readMessage(getReqMsg());
          break;
        }
      }
    }
  }
  
  
  static {
    defaultInstance = new SingleMessage(true);
    HelloWorld.internalForceInit();
    defaultInstance.initFields();
  }
  
  // @@protoc_insertion_point(class_scope:SingleMessage)
}

