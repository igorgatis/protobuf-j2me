// Generated by the protocol buffer compiler.  DO NOT EDIT!

public  final class PrimitiveTypesOnly extends
    com.google.protobuf.GeneratedMessage {
  // Use PrimitiveTypesOnly.newBuilder() to construct.
  private PrimitiveTypesOnly() {
    initFields();
  }
  private PrimitiveTypesOnly(boolean noInit) {}
  
  private static final PrimitiveTypesOnly defaultInstance;
  public static PrimitiveTypesOnly getDefaultInstance() {
    return defaultInstance;
  }
  
  public PrimitiveTypesOnly getDefaultInstanceForType() {
    return defaultInstance;
  }
  
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return HelloWorld.internal_static_PrimitiveTypesOnly_descriptor;
  }
  
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return HelloWorld.internal_static_PrimitiveTypesOnly_fieldAccessorTable;
  }
  
  // required bool req_bool = 1;
  public static final int REQ_BOOL_FIELD_NUMBER = 1;
  private boolean hasReqBool;
  private boolean reqBool_ = false;
  public boolean hasReqBool() { return hasReqBool; }
  public boolean getReqBool() { return reqBool_; }
  
  // required int32 req_int = 2;
  public static final int REQ_INT_FIELD_NUMBER = 2;
  private boolean hasReqInt;
  private int reqInt_ = 0;
  public boolean hasReqInt() { return hasReqInt; }
  public int getReqInt() { return reqInt_; }
  
  // required string req_str = 3;
  public static final int REQ_STR_FIELD_NUMBER = 3;
  private boolean hasReqStr;
  private java.lang.String reqStr_ = "";
  public boolean hasReqStr() { return hasReqStr; }
  public java.lang.String getReqStr() { return reqStr_; }
  
  private void initFields() {
  }
  public final boolean isInitialized() {
    if (!hasReqBool) return false;
    if (!hasReqInt) return false;
    if (!hasReqStr) return false;
    return true;
  }
  
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (hasReqBool()) {
      output.writeBool(1, getReqBool());
    }
    if (hasReqInt()) {
      output.writeInt32(2, getReqInt());
    }
    if (hasReqStr()) {
      output.writeString(3, getReqStr());
    }
    getUnknownFields().writeTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
  
    size = 0;
    if (hasReqBool()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, getReqBool());
    }
    if (hasReqInt()) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, getReqInt());
    }
    if (hasReqStr()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getReqStr());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }
  
  public static PrimitiveTypesOnly parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data).buildParsed();
  }
  public static PrimitiveTypesOnly parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data, extensionRegistry)
             .buildParsed();
  }
  public static PrimitiveTypesOnly parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data).buildParsed();
  }
  public static PrimitiveTypesOnly parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data, extensionRegistry)
             .buildParsed();
  }
  public static PrimitiveTypesOnly parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input).buildParsed();
  }
  public static PrimitiveTypesOnly parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input, extensionRegistry)
             .buildParsed();
  }
  public static PrimitiveTypesOnly parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    Builder builder = newBuilder();
    if (builder.mergeDelimitedFrom(input)) {
      return builder.buildParsed();
    } else {
      return null;
    }
  }
  public static PrimitiveTypesOnly parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    Builder builder = newBuilder();
    if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
      return builder.buildParsed();
    } else {
      return null;
    }
  }
  public static PrimitiveTypesOnly parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input).buildParsed();
  }
  public static PrimitiveTypesOnly parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input, extensionRegistry)
             .buildParsed();
  }
  
  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(PrimitiveTypesOnly prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }
  
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> {
    private PrimitiveTypesOnly result;
    
    // Construct using PrimitiveTypesOnly.newBuilder()
    private Builder() {}
    
    private static Builder create() {
      Builder builder = new Builder();
      builder.result = new PrimitiveTypesOnly();
      return builder;
    }
    
    protected PrimitiveTypesOnly internalGetResult() {
      return result;
    }
    
    public Builder clear() {
      if (result == null) {
        throw new IllegalStateException(
          "Cannot call clear() after build().");
      }
      result = new PrimitiveTypesOnly();
      return this;
    }
    
    public Builder clone() {
      return create().mergeFrom(result);
    }
    
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return PrimitiveTypesOnly.getDescriptor();
    }
    
    public PrimitiveTypesOnly getDefaultInstanceForType() {
      return PrimitiveTypesOnly.getDefaultInstance();
    }
    
    public boolean isInitialized() {
      return result.isInitialized();
    }
    public PrimitiveTypesOnly build() {
      if (result != null && !isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return buildPartial();
    }
    
    private PrimitiveTypesOnly buildParsed()
        throws com.google.protobuf.InvalidProtocolBufferException {
      if (!isInitialized()) {
        throw newUninitializedMessageException(
          result).asInvalidProtocolBufferException();
      }
      return buildPartial();
    }
    
    public PrimitiveTypesOnly buildPartial() {
      if (result == null) {
        throw new IllegalStateException(
          "build() has already been called on this Builder.");
      }
      PrimitiveTypesOnly returnMe = result;
      result = null;
      return returnMe;
    }
    
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof PrimitiveTypesOnly) {
        return mergeFrom((PrimitiveTypesOnly)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }
    
    public Builder mergeFrom(PrimitiveTypesOnly other) {
      if (other == PrimitiveTypesOnly.getDefaultInstance()) return this;
      if (other.hasReqBool()) {
        setReqBool(other.getReqBool());
      }
      if (other.hasReqInt()) {
        setReqInt(other.getReqInt());
      }
      if (other.hasReqStr()) {
        setReqStr(other.getReqStr());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }
    
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder(
          this.getUnknownFields());
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              return this;
            }
            break;
          }
          case 8: {
            setReqBool(input.readBool());
            break;
          }
          case 16: {
            setReqInt(input.readInt32());
            break;
          }
          case 26: {
            setReqStr(input.readString());
            break;
          }
        }
      }
    }
    
    
    // required bool req_bool = 1;
    public boolean hasReqBool() {
      return result.hasReqBool();
    }
    public boolean getReqBool() {
      return result.getReqBool();
    }
    public Builder setReqBool(boolean value) {
      result.hasReqBool = true;
      result.reqBool_ = value;
      return this;
    }
    public Builder clearReqBool() {
      result.hasReqBool = false;
      result.reqBool_ = false;
      return this;
    }
    
    // required int32 req_int = 2;
    public boolean hasReqInt() {
      return result.hasReqInt();
    }
    public int getReqInt() {
      return result.getReqInt();
    }
    public Builder setReqInt(int value) {
      result.hasReqInt = true;
      result.reqInt_ = value;
      return this;
    }
    public Builder clearReqInt() {
      result.hasReqInt = false;
      result.reqInt_ = 0;
      return this;
    }
    
    // required string req_str = 3;
    public boolean hasReqStr() {
      return result.hasReqStr();
    }
    public java.lang.String getReqStr() {
      return result.getReqStr();
    }
    public Builder setReqStr(java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.hasReqStr = true;
      result.reqStr_ = value;
      return this;
    }
    public Builder clearReqStr() {
      result.hasReqStr = false;
      result.reqStr_ = getDefaultInstance().getReqStr();
      return this;
    }
    
    // @@protoc_insertion_point(builder_scope:PrimitiveTypesOnly)
  }
  
  static {
    defaultInstance = new PrimitiveTypesOnly(true);
    HelloWorld.internalForceInit();
    defaultInstance.initFields();
  }
  
  // @@protoc_insertion_point(class_scope:PrimitiveTypesOnly)
}

