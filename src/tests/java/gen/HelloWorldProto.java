// Generated by the protocol buffer compiler.  DO NOT EDIT!

public  final class HelloWorldProto extends
    com.google.protobuf.GeneratedMessage {
  // Use HelloWorldProto.newBuilder() to construct.
  private HelloWorldProto() {
    initFields();
  }
  private HelloWorldProto(boolean noInit) {}
  
  private static final HelloWorldProto defaultInstance;
  public static HelloWorldProto getDefaultInstance() {
    return defaultInstance;
  }
  
  public HelloWorldProto getDefaultInstanceForType() {
    return defaultInstance;
  }
  
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return HelloWorld.internal_static_HelloWorldProto_descriptor;
  }
  
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return HelloWorld.internal_static_HelloWorldProto_fieldAccessorTable;
  }
  
  // required int32 req_int = 1;
  public static final int REQ_INT_FIELD_NUMBER = 1;
  private boolean hasReqInt;
  private int reqInt_ = 0;
  public boolean hasReqInt() { return hasReqInt; }
  public int getReqInt() { return reqInt_; }
  
  // optional int32 opt_int = 2;
  public static final int OPT_INT_FIELD_NUMBER = 2;
  private boolean hasOptInt;
  private int optInt_ = 0;
  public boolean hasOptInt() { return hasOptInt; }
  public int getOptInt() { return optInt_; }
  
  // repeated int32 rep_int = 3;
  public static final int REP_INT_FIELD_NUMBER = 3;
  private java.util.List<java.lang.Integer> repInt_ =
    java.util.Collections.emptyList();
  public java.util.List<java.lang.Integer> getRepIntList() {
    return repInt_;
  }
  public int getRepIntCount() { return repInt_.size(); }
  public int getRepInt(int index) {
    return repInt_.get(index);
  }
  
  // required string req_str = 4;
  public static final int REQ_STR_FIELD_NUMBER = 4;
  private boolean hasReqStr;
  private java.lang.String reqStr_ = "";
  public boolean hasReqStr() { return hasReqStr; }
  public java.lang.String getReqStr() { return reqStr_; }
  
  // optional string opt_str = 5;
  public static final int OPT_STR_FIELD_NUMBER = 5;
  private boolean hasOptStr;
  private java.lang.String optStr_ = "";
  public boolean hasOptStr() { return hasOptStr; }
  public java.lang.String getOptStr() { return optStr_; }
  
  // repeated string rep_str = 6;
  public static final int REP_STR_FIELD_NUMBER = 6;
  private java.util.List<java.lang.String> repStr_ =
    java.util.Collections.emptyList();
  public java.util.List<java.lang.String> getRepStrList() {
    return repStr_;
  }
  public int getRepStrCount() { return repStr_.size(); }
  public java.lang.String getRepStr(int index) {
    return repStr_.get(index);
  }
  
  // required bytes req_bts = 7;
  public static final int REQ_BTS_FIELD_NUMBER = 7;
  private boolean hasReqBts;
  private com.google.protobuf.ByteString reqBts_ = com.google.protobuf.ByteString.EMPTY;
  public boolean hasReqBts() { return hasReqBts; }
  public com.google.protobuf.ByteString getReqBts() { return reqBts_; }
  
  // optional bytes opt_bts = 8;
  public static final int OPT_BTS_FIELD_NUMBER = 8;
  private boolean hasOptBts;
  private com.google.protobuf.ByteString optBts_ = com.google.protobuf.ByteString.EMPTY;
  public boolean hasOptBts() { return hasOptBts; }
  public com.google.protobuf.ByteString getOptBts() { return optBts_; }
  
  // repeated bytes rep_bts = 9;
  public static final int REP_BTS_FIELD_NUMBER = 9;
  private java.util.List<com.google.protobuf.ByteString> repBts_ =
    java.util.Collections.emptyList();
  public java.util.List<com.google.protobuf.ByteString> getRepBtsList() {
    return repBts_;
  }
  public int getRepBtsCount() { return repBts_.size(); }
  public com.google.protobuf.ByteString getRepBts(int index) {
    return repBts_.get(index);
  }
  
  // required .Flags req_flg = 10;
  public static final int REQ_FLG_FIELD_NUMBER = 10;
  private boolean hasReqFlg;
  private Flags reqFlg_;
  public boolean hasReqFlg() { return hasReqFlg; }
  public Flags getReqFlg() { return reqFlg_; }
  
  // optional .Flags opt_flg = 11;
  public static final int OPT_FLG_FIELD_NUMBER = 11;
  private boolean hasOptFlg;
  private Flags optFlg_;
  public boolean hasOptFlg() { return hasOptFlg; }
  public Flags getOptFlg() { return optFlg_; }
  
  // repeated .Flags rep_flg = 12;
  public static final int REP_FLG_FIELD_NUMBER = 12;
  private java.util.List<Flags> repFlg_ =
    java.util.Collections.emptyList();
  public java.util.List<Flags> getRepFlgList() {
    return repFlg_;
  }
  public int getRepFlgCount() { return repFlg_.size(); }
  public Flags getRepFlg(int index) {
    return repFlg_.get(index);
  }
  
  // required .Foo req_foo = 13;
  public static final int REQ_FOO_FIELD_NUMBER = 13;
  private boolean hasReqFoo;
  private Foo reqFoo_;
  public boolean hasReqFoo() { return hasReqFoo; }
  public Foo getReqFoo() { return reqFoo_; }
  
  // optional .Foo opt_foo = 14;
  public static final int OPT_FOO_FIELD_NUMBER = 14;
  private boolean hasOptFoo;
  private Foo optFoo_;
  public boolean hasOptFoo() { return hasOptFoo; }
  public Foo getOptFoo() { return optFoo_; }
  
  // repeated .Foo rep_foo = 15;
  public static final int REP_FOO_FIELD_NUMBER = 15;
  private java.util.List<Foo> repFoo_ =
    java.util.Collections.emptyList();
  public java.util.List<Foo> getRepFooList() {
    return repFoo_;
  }
  public int getRepFooCount() { return repFoo_.size(); }
  public Foo getRepFoo(int index) {
    return repFoo_.get(index);
  }
  
  // required bool req_bool = 16;
  public static final int REQ_BOOL_FIELD_NUMBER = 16;
  private boolean hasReqBool;
  private boolean reqBool_ = false;
  public boolean hasReqBool() { return hasReqBool; }
  public boolean getReqBool() { return reqBool_; }
  
  // optional bool opt_bool = 17;
  public static final int OPT_BOOL_FIELD_NUMBER = 17;
  private boolean hasOptBool;
  private boolean optBool_ = false;
  public boolean hasOptBool() { return hasOptBool; }
  public boolean getOptBool() { return optBool_; }
  
  // repeated bool rep_bool = 18;
  public static final int REP_BOOL_FIELD_NUMBER = 18;
  private java.util.List<java.lang.Boolean> repBool_ =
    java.util.Collections.emptyList();
  public java.util.List<java.lang.Boolean> getRepBoolList() {
    return repBool_;
  }
  public int getRepBoolCount() { return repBool_.size(); }
  public boolean getRepBool(int index) {
    return repBool_.get(index);
  }
  
  // required int32 req_int_def = 19 [default = 1];
  public static final int REQ_INT_DEF_FIELD_NUMBER = 19;
  private boolean hasReqIntDef;
  private int reqIntDef_ = 1;
  public boolean hasReqIntDef() { return hasReqIntDef; }
  public int getReqIntDef() { return reqIntDef_; }
  
  // optional int32 opt_int_def = 20 [default = 2];
  public static final int OPT_INT_DEF_FIELD_NUMBER = 20;
  private boolean hasOptIntDef;
  private int optIntDef_ = 2;
  public boolean hasOptIntDef() { return hasOptIntDef; }
  public int getOptIntDef() { return optIntDef_; }
  
  // required .Flags req_flg_def = 21 [default = VAL0];
  public static final int REQ_FLG_DEF_FIELD_NUMBER = 21;
  private boolean hasReqFlgDef;
  private Flags reqFlgDef_;
  public boolean hasReqFlgDef() { return hasReqFlgDef; }
  public Flags getReqFlgDef() { return reqFlgDef_; }
  
  // optional .Flags opt_flg_def = 22 [default = VAL1];
  public static final int OPT_FLG_DEF_FIELD_NUMBER = 22;
  private boolean hasOptFlgDef;
  private Flags optFlgDef_;
  public boolean hasOptFlgDef() { return hasOptFlgDef; }
  public Flags getOptFlgDef() { return optFlgDef_; }
  
  // required string req_str_def = 23 [default = "1"];
  public static final int REQ_STR_DEF_FIELD_NUMBER = 23;
  private boolean hasReqStrDef;
  private java.lang.String reqStrDef_ = "1";
  public boolean hasReqStrDef() { return hasReqStrDef; }
  public java.lang.String getReqStrDef() { return reqStrDef_; }
  
  // optional string opt_str_def = 24 [default = "2"];
  public static final int OPT_STR_DEF_FIELD_NUMBER = 24;
  private boolean hasOptStrDef;
  private java.lang.String optStrDef_ = "2";
  public boolean hasOptStrDef() { return hasOptStrDef; }
  public java.lang.String getOptStrDef() { return optStrDef_; }
  
  // required bool req_bool_def = 25 [default = true];
  public static final int REQ_BOOL_DEF_FIELD_NUMBER = 25;
  private boolean hasReqBoolDef;
  private boolean reqBoolDef_ = true;
  public boolean hasReqBoolDef() { return hasReqBoolDef; }
  public boolean getReqBoolDef() { return reqBoolDef_; }
  
  // optional bool opt_bool_def = 26 [default = false];
  public static final int OPT_BOOL_DEF_FIELD_NUMBER = 26;
  private boolean hasOptBoolDef;
  private boolean optBoolDef_ = false;
  public boolean hasOptBoolDef() { return hasOptBoolDef; }
  public boolean getOptBoolDef() { return optBoolDef_; }
  
  // repeated int32 rep_int_pck = 27 [packed = true];
  public static final int REP_INT_PCK_FIELD_NUMBER = 27;
  private java.util.List<java.lang.Integer> repIntPck_ =
    java.util.Collections.emptyList();
  public java.util.List<java.lang.Integer> getRepIntPckList() {
    return repIntPck_;
  }
  public int getRepIntPckCount() { return repIntPck_.size(); }
  public int getRepIntPck(int index) {
    return repIntPck_.get(index);
  }
  private int repIntPckMemoizedSerializedSize = -1;
  
  // repeated bool rep_bool_pck = 28 [packed = true];
  public static final int REP_BOOL_PCK_FIELD_NUMBER = 28;
  private java.util.List<java.lang.Boolean> repBoolPck_ =
    java.util.Collections.emptyList();
  public java.util.List<java.lang.Boolean> getRepBoolPckList() {
    return repBoolPck_;
  }
  public int getRepBoolPckCount() { return repBoolPck_.size(); }
  public boolean getRepBoolPck(int index) {
    return repBoolPck_.get(index);
  }
  private int repBoolPckMemoizedSerializedSize = -1;
  
  // repeated .Flags rep_flg_pck = 29 [packed = true];
  public static final int REP_FLG_PCK_FIELD_NUMBER = 29;
  private java.util.List<Flags> repFlgPck_ =
    java.util.Collections.emptyList();
  public java.util.List<Flags> getRepFlgPckList() {
    return repFlgPck_;
  }
  public int getRepFlgPckCount() { return repFlgPck_.size(); }
  public Flags getRepFlgPck(int index) {
    return repFlgPck_.get(index);
  }
  private int repFlgPckMemoizedSerializedSize;
  
  private void initFields() {
    reqFlg_ = Flags.VAL0;
    optFlg_ = Flags.VAL0;
    reqFoo_ = Foo.getDefaultInstance();
    optFoo_ = Foo.getDefaultInstance();
    reqFlgDef_ = Flags.VAL0;
    optFlgDef_ = Flags.VAL1;
  }
  public final boolean isInitialized() {
    if (!hasReqInt) return false;
    if (!hasReqStr) return false;
    if (!hasReqBts) return false;
    if (!hasReqFlg) return false;
    if (!hasReqFoo) return false;
    if (!hasReqBool) return false;
    if (!hasReqIntDef) return false;
    if (!hasReqFlgDef) return false;
    if (!hasReqStrDef) return false;
    if (!hasReqBoolDef) return false;
    if (!getReqFoo().isInitialized()) return false;
    if (hasOptFoo()) {
      if (!getOptFoo().isInitialized()) return false;
    }
    for (Foo element : getRepFooList()) {
      if (!element.isInitialized()) return false;
    }
    return true;
  }
  
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (hasReqInt()) {
      output.writeInt32(1, getReqInt());
    }
    if (hasOptInt()) {
      output.writeInt32(2, getOptInt());
    }
    for (int element : getRepIntList()) {
      output.writeInt32(3, element);
    }
    if (hasReqStr()) {
      output.writeString(4, getReqStr());
    }
    if (hasOptStr()) {
      output.writeString(5, getOptStr());
    }
    for (java.lang.String element : getRepStrList()) {
      output.writeString(6, element);
    }
    if (hasReqBts()) {
      output.writeBytes(7, getReqBts());
    }
    if (hasOptBts()) {
      output.writeBytes(8, getOptBts());
    }
    for (com.google.protobuf.ByteString element : getRepBtsList()) {
      output.writeBytes(9, element);
    }
    if (hasReqFlg()) {
      output.writeEnum(10, getReqFlg().getNumber());
    }
    if (hasOptFlg()) {
      output.writeEnum(11, getOptFlg().getNumber());
    }
    for (Flags element : getRepFlgList()) {
      output.writeEnum(12, element.getNumber());
    }
    if (hasReqFoo()) {
      output.writeMessage(13, getReqFoo());
    }
    if (hasOptFoo()) {
      output.writeMessage(14, getOptFoo());
    }
    for (Foo element : getRepFooList()) {
      output.writeMessage(15, element);
    }
    if (hasReqBool()) {
      output.writeBool(16, getReqBool());
    }
    if (hasOptBool()) {
      output.writeBool(17, getOptBool());
    }
    for (boolean element : getRepBoolList()) {
      output.writeBool(18, element);
    }
    if (hasReqIntDef()) {
      output.writeInt32(19, getReqIntDef());
    }
    if (hasOptIntDef()) {
      output.writeInt32(20, getOptIntDef());
    }
    if (hasReqFlgDef()) {
      output.writeEnum(21, getReqFlgDef().getNumber());
    }
    if (hasOptFlgDef()) {
      output.writeEnum(22, getOptFlgDef().getNumber());
    }
    if (hasReqStrDef()) {
      output.writeString(23, getReqStrDef());
    }
    if (hasOptStrDef()) {
      output.writeString(24, getOptStrDef());
    }
    if (hasReqBoolDef()) {
      output.writeBool(25, getReqBoolDef());
    }
    if (hasOptBoolDef()) {
      output.writeBool(26, getOptBoolDef());
    }
    if (getRepIntPckList().size() > 0) {
      output.writeRawVarint32(218);
      output.writeRawVarint32(repIntPckMemoizedSerializedSize);
    }
    for (int element : getRepIntPckList()) {
      output.writeInt32NoTag(element);
    }
    if (getRepBoolPckList().size() > 0) {
      output.writeRawVarint32(226);
      output.writeRawVarint32(repBoolPckMemoizedSerializedSize);
    }
    for (boolean element : getRepBoolPckList()) {
      output.writeBoolNoTag(element);
    }
    if (getRepFlgPckList().size() > 0) {
      output.writeRawVarint32(234);
      output.writeRawVarint32(repFlgPckMemoizedSerializedSize);
    }
    for (Flags element : getRepFlgPckList()) {
      output.writeEnumNoTag(element.getNumber());
    }
    getUnknownFields().writeTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
  
    size = 0;
    if (hasReqInt()) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, getReqInt());
    }
    if (hasOptInt()) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, getOptInt());
    }
    {
      int dataSize = 0;
      for (int element : getRepIntList()) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(element);
      }
      size += dataSize;
      size += 1 * getRepIntList().size();
    }
    if (hasReqStr()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(4, getReqStr());
    }
    if (hasOptStr()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(5, getOptStr());
    }
    {
      int dataSize = 0;
      for (java.lang.String element : getRepStrList()) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeStringSizeNoTag(element);
      }
      size += dataSize;
      size += 1 * getRepStrList().size();
    }
    if (hasReqBts()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(7, getReqBts());
    }
    if (hasOptBts()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(8, getOptBts());
    }
    {
      int dataSize = 0;
      for (com.google.protobuf.ByteString element : getRepBtsList()) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeBytesSizeNoTag(element);
      }
      size += dataSize;
      size += 1 * getRepBtsList().size();
    }
    if (hasReqFlg()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, getReqFlg().getNumber());
    }
    if (hasOptFlg()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(11, getOptFlg().getNumber());
    }
    {
      int dataSize = 0;
      for (Flags element : getRepFlgList()) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(element.getNumber());
      }
      size += dataSize;
      size += 1 * getRepFlgList().size();
    }
    if (hasReqFoo()) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getReqFoo());
    }
    if (hasOptFoo()) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getOptFoo());
    }
    for (Foo element : getRepFooList()) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, element);
    }
    if (hasReqBool()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(16, getReqBool());
    }
    if (hasOptBool()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(17, getOptBool());
    }
    {
      int dataSize = 0;
      dataSize = 1 * getRepBoolList().size();
      size += dataSize;
      size += 2 * getRepBoolList().size();
    }
    if (hasReqIntDef()) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(19, getReqIntDef());
    }
    if (hasOptIntDef()) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(20, getOptIntDef());
    }
    if (hasReqFlgDef()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(21, getReqFlgDef().getNumber());
    }
    if (hasOptFlgDef()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(22, getOptFlgDef().getNumber());
    }
    if (hasReqStrDef()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(23, getReqStrDef());
    }
    if (hasOptStrDef()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(24, getOptStrDef());
    }
    if (hasReqBoolDef()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(25, getReqBoolDef());
    }
    if (hasOptBoolDef()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(26, getOptBoolDef());
    }
    {
      int dataSize = 0;
      for (int element : getRepIntPckList()) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(element);
      }
      size += dataSize;
      if (!getRepIntPckList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      repIntPckMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 1 * getRepBoolPckList().size();
      size += dataSize;
      if (!getRepBoolPckList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      repBoolPckMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (Flags element : getRepFlgPckList()) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(element.getNumber());
      }
      size += dataSize;
      if (!getRepFlgPckList().isEmpty()) {  size += 2;
        size += com.google.protobuf.CodedOutputStream
          .computeRawVarint32Size(dataSize);
      }repFlgPckMemoizedSerializedSize = dataSize;
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }
  
  public static HelloWorldProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data).buildParsed();
  }
  public static HelloWorldProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data, extensionRegistry)
             .buildParsed();
  }
  public static HelloWorldProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data).buildParsed();
  }
  public static HelloWorldProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data, extensionRegistry)
             .buildParsed();
  }
  public static HelloWorldProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input).buildParsed();
  }
  public static HelloWorldProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input, extensionRegistry)
             .buildParsed();
  }
  public static HelloWorldProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    Builder builder = newBuilder();
    if (builder.mergeDelimitedFrom(input)) {
      return builder.buildParsed();
    } else {
      return null;
    }
  }
  public static HelloWorldProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    Builder builder = newBuilder();
    if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
      return builder.buildParsed();
    } else {
      return null;
    }
  }
  public static HelloWorldProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input).buildParsed();
  }
  public static HelloWorldProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input, extensionRegistry)
             .buildParsed();
  }
  
  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(HelloWorldProto prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }
  
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> {
    private HelloWorldProto result;
    
    // Construct using HelloWorldProto.newBuilder()
    private Builder() {}
    
    private static Builder create() {
      Builder builder = new Builder();
      builder.result = new HelloWorldProto();
      return builder;
    }
    
    protected HelloWorldProto internalGetResult() {
      return result;
    }
    
    public Builder clear() {
      if (result == null) {
        throw new IllegalStateException(
          "Cannot call clear() after build().");
      }
      result = new HelloWorldProto();
      return this;
    }
    
    public Builder clone() {
      return create().mergeFrom(result);
    }
    
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return HelloWorldProto.getDescriptor();
    }
    
    public HelloWorldProto getDefaultInstanceForType() {
      return HelloWorldProto.getDefaultInstance();
    }
    
    public boolean isInitialized() {
      return result.isInitialized();
    }
    public HelloWorldProto build() {
      if (result != null && !isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return buildPartial();
    }
    
    private HelloWorldProto buildParsed()
        throws com.google.protobuf.InvalidProtocolBufferException {
      if (!isInitialized()) {
        throw newUninitializedMessageException(
          result).asInvalidProtocolBufferException();
      }
      return buildPartial();
    }
    
    public HelloWorldProto buildPartial() {
      if (result == null) {
        throw new IllegalStateException(
          "build() has already been called on this Builder.");
      }
      if (result.repInt_ != java.util.Collections.EMPTY_LIST) {
        result.repInt_ =
          java.util.Collections.unmodifiableList(result.repInt_);
      }
      if (result.repStr_ != java.util.Collections.EMPTY_LIST) {
        result.repStr_ =
          java.util.Collections.unmodifiableList(result.repStr_);
      }
      if (result.repBts_ != java.util.Collections.EMPTY_LIST) {
        result.repBts_ =
          java.util.Collections.unmodifiableList(result.repBts_);
      }
      if (result.repFlg_ != java.util.Collections.EMPTY_LIST) {
        result.repFlg_ =
          java.util.Collections.unmodifiableList(result.repFlg_);
      }
      if (result.repFoo_ != java.util.Collections.EMPTY_LIST) {
        result.repFoo_ =
          java.util.Collections.unmodifiableList(result.repFoo_);
      }
      if (result.repBool_ != java.util.Collections.EMPTY_LIST) {
        result.repBool_ =
          java.util.Collections.unmodifiableList(result.repBool_);
      }
      if (result.repIntPck_ != java.util.Collections.EMPTY_LIST) {
        result.repIntPck_ =
          java.util.Collections.unmodifiableList(result.repIntPck_);
      }
      if (result.repBoolPck_ != java.util.Collections.EMPTY_LIST) {
        result.repBoolPck_ =
          java.util.Collections.unmodifiableList(result.repBoolPck_);
      }
      if (result.repFlgPck_ != java.util.Collections.EMPTY_LIST) {
        result.repFlgPck_ =
          java.util.Collections.unmodifiableList(result.repFlgPck_);
      }
      HelloWorldProto returnMe = result;
      result = null;
      return returnMe;
    }
    
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof HelloWorldProto) {
        return mergeFrom((HelloWorldProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }
    
    public Builder mergeFrom(HelloWorldProto other) {
      if (other == HelloWorldProto.getDefaultInstance()) return this;
      if (other.hasReqInt()) {
        setReqInt(other.getReqInt());
      }
      if (other.hasOptInt()) {
        setOptInt(other.getOptInt());
      }
      if (!other.repInt_.isEmpty()) {
        if (result.repInt_.isEmpty()) {
          result.repInt_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.repInt_.addAll(other.repInt_);
      }
      if (other.hasReqStr()) {
        setReqStr(other.getReqStr());
      }
      if (other.hasOptStr()) {
        setOptStr(other.getOptStr());
      }
      if (!other.repStr_.isEmpty()) {
        if (result.repStr_.isEmpty()) {
          result.repStr_ = new java.util.ArrayList<java.lang.String>();
        }
        result.repStr_.addAll(other.repStr_);
      }
      if (other.hasReqBts()) {
        setReqBts(other.getReqBts());
      }
      if (other.hasOptBts()) {
        setOptBts(other.getOptBts());
      }
      if (!other.repBts_.isEmpty()) {
        if (result.repBts_.isEmpty()) {
          result.repBts_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        result.repBts_.addAll(other.repBts_);
      }
      if (other.hasReqFlg()) {
        setReqFlg(other.getReqFlg());
      }
      if (other.hasOptFlg()) {
        setOptFlg(other.getOptFlg());
      }
      if (!other.repFlg_.isEmpty()) {
        if (result.repFlg_.isEmpty()) {
          result.repFlg_ = new java.util.ArrayList<Flags>();
        }
        result.repFlg_.addAll(other.repFlg_);
      }
      if (other.hasReqFoo()) {
        mergeReqFoo(other.getReqFoo());
      }
      if (other.hasOptFoo()) {
        mergeOptFoo(other.getOptFoo());
      }
      if (!other.repFoo_.isEmpty()) {
        if (result.repFoo_.isEmpty()) {
          result.repFoo_ = new java.util.ArrayList<Foo>();
        }
        result.repFoo_.addAll(other.repFoo_);
      }
      if (other.hasReqBool()) {
        setReqBool(other.getReqBool());
      }
      if (other.hasOptBool()) {
        setOptBool(other.getOptBool());
      }
      if (!other.repBool_.isEmpty()) {
        if (result.repBool_.isEmpty()) {
          result.repBool_ = new java.util.ArrayList<java.lang.Boolean>();
        }
        result.repBool_.addAll(other.repBool_);
      }
      if (other.hasReqIntDef()) {
        setReqIntDef(other.getReqIntDef());
      }
      if (other.hasOptIntDef()) {
        setOptIntDef(other.getOptIntDef());
      }
      if (other.hasReqFlgDef()) {
        setReqFlgDef(other.getReqFlgDef());
      }
      if (other.hasOptFlgDef()) {
        setOptFlgDef(other.getOptFlgDef());
      }
      if (other.hasReqStrDef()) {
        setReqStrDef(other.getReqStrDef());
      }
      if (other.hasOptStrDef()) {
        setOptStrDef(other.getOptStrDef());
      }
      if (other.hasReqBoolDef()) {
        setReqBoolDef(other.getReqBoolDef());
      }
      if (other.hasOptBoolDef()) {
        setOptBoolDef(other.getOptBoolDef());
      }
      if (!other.repIntPck_.isEmpty()) {
        if (result.repIntPck_.isEmpty()) {
          result.repIntPck_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.repIntPck_.addAll(other.repIntPck_);
      }
      if (!other.repBoolPck_.isEmpty()) {
        if (result.repBoolPck_.isEmpty()) {
          result.repBoolPck_ = new java.util.ArrayList<java.lang.Boolean>();
        }
        result.repBoolPck_.addAll(other.repBoolPck_);
      }
      if (!other.repFlgPck_.isEmpty()) {
        if (result.repFlgPck_.isEmpty()) {
          result.repFlgPck_ = new java.util.ArrayList<Flags>();
        }
        result.repFlgPck_.addAll(other.repFlgPck_);
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }
    
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder(
          this.getUnknownFields());
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              return this;
            }
            break;
          }
          case 8: {
            setReqInt(input.readInt32());
            break;
          }
          case 16: {
            setOptInt(input.readInt32());
            break;
          }
          case 24: {
            addRepInt(input.readInt32());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            while (input.getBytesUntilLimit() > 0) {
              addRepInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 34: {
            setReqStr(input.readString());
            break;
          }
          case 42: {
            setOptStr(input.readString());
            break;
          }
          case 50: {
            addRepStr(input.readString());
            break;
          }
          case 58: {
            setReqBts(input.readBytes());
            break;
          }
          case 66: {
            setOptBts(input.readBytes());
            break;
          }
          case 74: {
            addRepBts(input.readBytes());
            break;
          }
          case 80: {
            int rawValue = input.readEnum();
            Flags value = Flags.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(10, rawValue);
            } else {
              setReqFlg(value);
            }
            break;
          }
          case 88: {
            int rawValue = input.readEnum();
            Flags value = Flags.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(11, rawValue);
            } else {
              setOptFlg(value);
            }
            break;
          }
          case 96: {
            int rawValue = input.readEnum();
            Flags value = Flags.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(12, rawValue);
            } else {
              addRepFlg(value);
            }
            break;
          }
          case 98: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              Flags value = Flags.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                addRepFlg(value);
              }
            }
            input.popLimit(oldLimit);
            break;
          }
          case 106: {
            Foo.Builder subBuilder = Foo.newBuilder();
            if (hasReqFoo()) {
              subBuilder.mergeFrom(getReqFoo());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setReqFoo(subBuilder.buildPartial());
            break;
          }
          case 114: {
            Foo.Builder subBuilder = Foo.newBuilder();
            if (hasOptFoo()) {
              subBuilder.mergeFrom(getOptFoo());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setOptFoo(subBuilder.buildPartial());
            break;
          }
          case 122: {
            Foo.Builder subBuilder = Foo.newBuilder();
            input.readMessage(subBuilder, extensionRegistry);
            addRepFoo(subBuilder.buildPartial());
            break;
          }
          case 128: {
            setReqBool(input.readBool());
            break;
          }
          case 136: {
            setOptBool(input.readBool());
            break;
          }
          case 144: {
            addRepBool(input.readBool());
            break;
          }
          case 146: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            while (input.getBytesUntilLimit() > 0) {
              addRepBool(input.readBool());
            }
            input.popLimit(limit);
            break;
          }
          case 152: {
            setReqIntDef(input.readInt32());
            break;
          }
          case 160: {
            setOptIntDef(input.readInt32());
            break;
          }
          case 168: {
            int rawValue = input.readEnum();
            Flags value = Flags.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(21, rawValue);
            } else {
              setReqFlgDef(value);
            }
            break;
          }
          case 176: {
            int rawValue = input.readEnum();
            Flags value = Flags.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(22, rawValue);
            } else {
              setOptFlgDef(value);
            }
            break;
          }
          case 186: {
            setReqStrDef(input.readString());
            break;
          }
          case 194: {
            setOptStrDef(input.readString());
            break;
          }
          case 200: {
            setReqBoolDef(input.readBool());
            break;
          }
          case 208: {
            setOptBoolDef(input.readBool());
            break;
          }
          case 216: {
            addRepIntPck(input.readInt32());
            break;
          }
          case 218: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            while (input.getBytesUntilLimit() > 0) {
              addRepIntPck(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 224: {
            addRepBoolPck(input.readBool());
            break;
          }
          case 226: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            while (input.getBytesUntilLimit() > 0) {
              addRepBoolPck(input.readBool());
            }
            input.popLimit(limit);
            break;
          }
          case 232: {
            int rawValue = input.readEnum();
            Flags value = Flags.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(29, rawValue);
            } else {
              addRepFlgPck(value);
            }
            break;
          }
          case 234: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              Flags value = Flags.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(29, rawValue);
              } else {
                addRepFlgPck(value);
              }
            }
            input.popLimit(oldLimit);
            break;
          }
        }
      }
    }
    
    
    // required int32 req_int = 1;
    public boolean hasReqInt() {
      return result.hasReqInt();
    }
    public int getReqInt() {
      return result.getReqInt();
    }
    public Builder setReqInt(int value) {
      result.hasReqInt = true;
      result.reqInt_ = value;
      return this;
    }
    public Builder clearReqInt() {
      result.hasReqInt = false;
      result.reqInt_ = 0;
      return this;
    }
    
    // optional int32 opt_int = 2;
    public boolean hasOptInt() {
      return result.hasOptInt();
    }
    public int getOptInt() {
      return result.getOptInt();
    }
    public Builder setOptInt(int value) {
      result.hasOptInt = true;
      result.optInt_ = value;
      return this;
    }
    public Builder clearOptInt() {
      result.hasOptInt = false;
      result.optInt_ = 0;
      return this;
    }
    
    // repeated int32 rep_int = 3;
    public java.util.List<java.lang.Integer> getRepIntList() {
      return java.util.Collections.unmodifiableList(result.repInt_);
    }
    public int getRepIntCount() {
      return result.getRepIntCount();
    }
    public int getRepInt(int index) {
      return result.getRepInt(index);
    }
    public Builder setRepInt(int index, int value) {
      result.repInt_.set(index, value);
      return this;
    }
    public Builder addRepInt(int value) {
      if (result.repInt_.isEmpty()) {
        result.repInt_ = new java.util.ArrayList<java.lang.Integer>();
      }
      result.repInt_.add(value);
      return this;
    }
    public Builder addAllRepInt(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      if (result.repInt_.isEmpty()) {
        result.repInt_ = new java.util.ArrayList<java.lang.Integer>();
      }
      super.addAll(values, result.repInt_);
      return this;
    }
    public Builder clearRepInt() {
      result.repInt_ = java.util.Collections.emptyList();
      return this;
    }
    
    // required string req_str = 4;
    public boolean hasReqStr() {
      return result.hasReqStr();
    }
    public java.lang.String getReqStr() {
      return result.getReqStr();
    }
    public Builder setReqStr(java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.hasReqStr = true;
      result.reqStr_ = value;
      return this;
    }
    public Builder clearReqStr() {
      result.hasReqStr = false;
      result.reqStr_ = getDefaultInstance().getReqStr();
      return this;
    }
    
    // optional string opt_str = 5;
    public boolean hasOptStr() {
      return result.hasOptStr();
    }
    public java.lang.String getOptStr() {
      return result.getOptStr();
    }
    public Builder setOptStr(java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.hasOptStr = true;
      result.optStr_ = value;
      return this;
    }
    public Builder clearOptStr() {
      result.hasOptStr = false;
      result.optStr_ = getDefaultInstance().getOptStr();
      return this;
    }
    
    // repeated string rep_str = 6;
    public java.util.List<java.lang.String> getRepStrList() {
      return java.util.Collections.unmodifiableList(result.repStr_);
    }
    public int getRepStrCount() {
      return result.getRepStrCount();
    }
    public java.lang.String getRepStr(int index) {
      return result.getRepStr(index);
    }
    public Builder setRepStr(int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.repStr_.set(index, value);
      return this;
    }
    public Builder addRepStr(java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  if (result.repStr_.isEmpty()) {
        result.repStr_ = new java.util.ArrayList<java.lang.String>();
      }
      result.repStr_.add(value);
      return this;
    }
    public Builder addAllRepStr(
        java.lang.Iterable<? extends java.lang.String> values) {
      if (result.repStr_.isEmpty()) {
        result.repStr_ = new java.util.ArrayList<java.lang.String>();
      }
      super.addAll(values, result.repStr_);
      return this;
    }
    public Builder clearRepStr() {
      result.repStr_ = java.util.Collections.emptyList();
      return this;
    }
    
    // required bytes req_bts = 7;
    public boolean hasReqBts() {
      return result.hasReqBts();
    }
    public com.google.protobuf.ByteString getReqBts() {
      return result.getReqBts();
    }
    public Builder setReqBts(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.hasReqBts = true;
      result.reqBts_ = value;
      return this;
    }
    public Builder clearReqBts() {
      result.hasReqBts = false;
      result.reqBts_ = getDefaultInstance().getReqBts();
      return this;
    }
    
    // optional bytes opt_bts = 8;
    public boolean hasOptBts() {
      return result.hasOptBts();
    }
    public com.google.protobuf.ByteString getOptBts() {
      return result.getOptBts();
    }
    public Builder setOptBts(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.hasOptBts = true;
      result.optBts_ = value;
      return this;
    }
    public Builder clearOptBts() {
      result.hasOptBts = false;
      result.optBts_ = getDefaultInstance().getOptBts();
      return this;
    }
    
    // repeated bytes rep_bts = 9;
    public java.util.List<com.google.protobuf.ByteString> getRepBtsList() {
      return java.util.Collections.unmodifiableList(result.repBts_);
    }
    public int getRepBtsCount() {
      return result.getRepBtsCount();
    }
    public com.google.protobuf.ByteString getRepBts(int index) {
      return result.getRepBts(index);
    }
    public Builder setRepBts(int index, com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.repBts_.set(index, value);
      return this;
    }
    public Builder addRepBts(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  if (result.repBts_.isEmpty()) {
        result.repBts_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
      }
      result.repBts_.add(value);
      return this;
    }
    public Builder addAllRepBts(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      if (result.repBts_.isEmpty()) {
        result.repBts_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
      }
      super.addAll(values, result.repBts_);
      return this;
    }
    public Builder clearRepBts() {
      result.repBts_ = java.util.Collections.emptyList();
      return this;
    }
    
    // required .Flags req_flg = 10;
    public boolean hasReqFlg() {
      return result.hasReqFlg();
    }
    public Flags getReqFlg() {
      return result.getReqFlg();
    }
    public Builder setReqFlg(Flags value) {
      if (value == null) {
        throw new NullPointerException();
      }
      result.hasReqFlg = true;
      result.reqFlg_ = value;
      return this;
    }
    public Builder clearReqFlg() {
      result.hasReqFlg = false;
      result.reqFlg_ = Flags.VAL0;
      return this;
    }
    
    // optional .Flags opt_flg = 11;
    public boolean hasOptFlg() {
      return result.hasOptFlg();
    }
    public Flags getOptFlg() {
      return result.getOptFlg();
    }
    public Builder setOptFlg(Flags value) {
      if (value == null) {
        throw new NullPointerException();
      }
      result.hasOptFlg = true;
      result.optFlg_ = value;
      return this;
    }
    public Builder clearOptFlg() {
      result.hasOptFlg = false;
      result.optFlg_ = Flags.VAL0;
      return this;
    }
    
    // repeated .Flags rep_flg = 12;
    public java.util.List<Flags> getRepFlgList() {
      return java.util.Collections.unmodifiableList(result.repFlg_);
    }
    public int getRepFlgCount() {
      return result.getRepFlgCount();
    }
    public Flags getRepFlg(int index) {
      return result.getRepFlg(index);
    }
    public Builder setRepFlg(int index, Flags value) {
      if (value == null) {
        throw new NullPointerException();
      }
      result.repFlg_.set(index, value);
      return this;
    }
    public Builder addRepFlg(Flags value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (result.repFlg_.isEmpty()) {
        result.repFlg_ = new java.util.ArrayList<Flags>();
      }
      result.repFlg_.add(value);
      return this;
    }
    public Builder addAllRepFlg(
        java.lang.Iterable<? extends Flags> values) {
      if (result.repFlg_.isEmpty()) {
        result.repFlg_ = new java.util.ArrayList<Flags>();
      }
      super.addAll(values, result.repFlg_);
      return this;
    }
    public Builder clearRepFlg() {
      result.repFlg_ = java.util.Collections.emptyList();
      return this;
    }
    
    // required .Foo req_foo = 13;
    public boolean hasReqFoo() {
      return result.hasReqFoo();
    }
    public Foo getReqFoo() {
      return result.getReqFoo();
    }
    public Builder setReqFoo(Foo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      result.hasReqFoo = true;
      result.reqFoo_ = value;
      return this;
    }
    public Builder setReqFoo(Foo.Builder builderForValue) {
      result.hasReqFoo = true;
      result.reqFoo_ = builderForValue.build();
      return this;
    }
    public Builder mergeReqFoo(Foo value) {
      if (result.hasReqFoo() &&
          result.reqFoo_ != Foo.getDefaultInstance()) {
        result.reqFoo_ =
          Foo.newBuilder(result.reqFoo_).mergeFrom(value).buildPartial();
      } else {
        result.reqFoo_ = value;
      }
      result.hasReqFoo = true;
      return this;
    }
    public Builder clearReqFoo() {
      result.hasReqFoo = false;
      result.reqFoo_ = Foo.getDefaultInstance();
      return this;
    }
    
    // optional .Foo opt_foo = 14;
    public boolean hasOptFoo() {
      return result.hasOptFoo();
    }
    public Foo getOptFoo() {
      return result.getOptFoo();
    }
    public Builder setOptFoo(Foo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      result.hasOptFoo = true;
      result.optFoo_ = value;
      return this;
    }
    public Builder setOptFoo(Foo.Builder builderForValue) {
      result.hasOptFoo = true;
      result.optFoo_ = builderForValue.build();
      return this;
    }
    public Builder mergeOptFoo(Foo value) {
      if (result.hasOptFoo() &&
          result.optFoo_ != Foo.getDefaultInstance()) {
        result.optFoo_ =
          Foo.newBuilder(result.optFoo_).mergeFrom(value).buildPartial();
      } else {
        result.optFoo_ = value;
      }
      result.hasOptFoo = true;
      return this;
    }
    public Builder clearOptFoo() {
      result.hasOptFoo = false;
      result.optFoo_ = Foo.getDefaultInstance();
      return this;
    }
    
    // repeated .Foo rep_foo = 15;
    public java.util.List<Foo> getRepFooList() {
      return java.util.Collections.unmodifiableList(result.repFoo_);
    }
    public int getRepFooCount() {
      return result.getRepFooCount();
    }
    public Foo getRepFoo(int index) {
      return result.getRepFoo(index);
    }
    public Builder setRepFoo(int index, Foo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      result.repFoo_.set(index, value);
      return this;
    }
    public Builder setRepFoo(int index, Foo.Builder builderForValue) {
      result.repFoo_.set(index, builderForValue.build());
      return this;
    }
    public Builder addRepFoo(Foo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (result.repFoo_.isEmpty()) {
        result.repFoo_ = new java.util.ArrayList<Foo>();
      }
      result.repFoo_.add(value);
      return this;
    }
    public Builder addRepFoo(Foo.Builder builderForValue) {
      if (result.repFoo_.isEmpty()) {
        result.repFoo_ = new java.util.ArrayList<Foo>();
      }
      result.repFoo_.add(builderForValue.build());
      return this;
    }
    public Builder addAllRepFoo(
        java.lang.Iterable<? extends Foo> values) {
      if (result.repFoo_.isEmpty()) {
        result.repFoo_ = new java.util.ArrayList<Foo>();
      }
      super.addAll(values, result.repFoo_);
      return this;
    }
    public Builder clearRepFoo() {
      result.repFoo_ = java.util.Collections.emptyList();
      return this;
    }
    
    // required bool req_bool = 16;
    public boolean hasReqBool() {
      return result.hasReqBool();
    }
    public boolean getReqBool() {
      return result.getReqBool();
    }
    public Builder setReqBool(boolean value) {
      result.hasReqBool = true;
      result.reqBool_ = value;
      return this;
    }
    public Builder clearReqBool() {
      result.hasReqBool = false;
      result.reqBool_ = false;
      return this;
    }
    
    // optional bool opt_bool = 17;
    public boolean hasOptBool() {
      return result.hasOptBool();
    }
    public boolean getOptBool() {
      return result.getOptBool();
    }
    public Builder setOptBool(boolean value) {
      result.hasOptBool = true;
      result.optBool_ = value;
      return this;
    }
    public Builder clearOptBool() {
      result.hasOptBool = false;
      result.optBool_ = false;
      return this;
    }
    
    // repeated bool rep_bool = 18;
    public java.util.List<java.lang.Boolean> getRepBoolList() {
      return java.util.Collections.unmodifiableList(result.repBool_);
    }
    public int getRepBoolCount() {
      return result.getRepBoolCount();
    }
    public boolean getRepBool(int index) {
      return result.getRepBool(index);
    }
    public Builder setRepBool(int index, boolean value) {
      result.repBool_.set(index, value);
      return this;
    }
    public Builder addRepBool(boolean value) {
      if (result.repBool_.isEmpty()) {
        result.repBool_ = new java.util.ArrayList<java.lang.Boolean>();
      }
      result.repBool_.add(value);
      return this;
    }
    public Builder addAllRepBool(
        java.lang.Iterable<? extends java.lang.Boolean> values) {
      if (result.repBool_.isEmpty()) {
        result.repBool_ = new java.util.ArrayList<java.lang.Boolean>();
      }
      super.addAll(values, result.repBool_);
      return this;
    }
    public Builder clearRepBool() {
      result.repBool_ = java.util.Collections.emptyList();
      return this;
    }
    
    // required int32 req_int_def = 19 [default = 1];
    public boolean hasReqIntDef() {
      return result.hasReqIntDef();
    }
    public int getReqIntDef() {
      return result.getReqIntDef();
    }
    public Builder setReqIntDef(int value) {
      result.hasReqIntDef = true;
      result.reqIntDef_ = value;
      return this;
    }
    public Builder clearReqIntDef() {
      result.hasReqIntDef = false;
      result.reqIntDef_ = 1;
      return this;
    }
    
    // optional int32 opt_int_def = 20 [default = 2];
    public boolean hasOptIntDef() {
      return result.hasOptIntDef();
    }
    public int getOptIntDef() {
      return result.getOptIntDef();
    }
    public Builder setOptIntDef(int value) {
      result.hasOptIntDef = true;
      result.optIntDef_ = value;
      return this;
    }
    public Builder clearOptIntDef() {
      result.hasOptIntDef = false;
      result.optIntDef_ = 2;
      return this;
    }
    
    // required .Flags req_flg_def = 21 [default = VAL0];
    public boolean hasReqFlgDef() {
      return result.hasReqFlgDef();
    }
    public Flags getReqFlgDef() {
      return result.getReqFlgDef();
    }
    public Builder setReqFlgDef(Flags value) {
      if (value == null) {
        throw new NullPointerException();
      }
      result.hasReqFlgDef = true;
      result.reqFlgDef_ = value;
      return this;
    }
    public Builder clearReqFlgDef() {
      result.hasReqFlgDef = false;
      result.reqFlgDef_ = Flags.VAL0;
      return this;
    }
    
    // optional .Flags opt_flg_def = 22 [default = VAL1];
    public boolean hasOptFlgDef() {
      return result.hasOptFlgDef();
    }
    public Flags getOptFlgDef() {
      return result.getOptFlgDef();
    }
    public Builder setOptFlgDef(Flags value) {
      if (value == null) {
        throw new NullPointerException();
      }
      result.hasOptFlgDef = true;
      result.optFlgDef_ = value;
      return this;
    }
    public Builder clearOptFlgDef() {
      result.hasOptFlgDef = false;
      result.optFlgDef_ = Flags.VAL1;
      return this;
    }
    
    // required string req_str_def = 23 [default = "1"];
    public boolean hasReqStrDef() {
      return result.hasReqStrDef();
    }
    public java.lang.String getReqStrDef() {
      return result.getReqStrDef();
    }
    public Builder setReqStrDef(java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.hasReqStrDef = true;
      result.reqStrDef_ = value;
      return this;
    }
    public Builder clearReqStrDef() {
      result.hasReqStrDef = false;
      result.reqStrDef_ = getDefaultInstance().getReqStrDef();
      return this;
    }
    
    // optional string opt_str_def = 24 [default = "2"];
    public boolean hasOptStrDef() {
      return result.hasOptStrDef();
    }
    public java.lang.String getOptStrDef() {
      return result.getOptStrDef();
    }
    public Builder setOptStrDef(java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.hasOptStrDef = true;
      result.optStrDef_ = value;
      return this;
    }
    public Builder clearOptStrDef() {
      result.hasOptStrDef = false;
      result.optStrDef_ = getDefaultInstance().getOptStrDef();
      return this;
    }
    
    // required bool req_bool_def = 25 [default = true];
    public boolean hasReqBoolDef() {
      return result.hasReqBoolDef();
    }
    public boolean getReqBoolDef() {
      return result.getReqBoolDef();
    }
    public Builder setReqBoolDef(boolean value) {
      result.hasReqBoolDef = true;
      result.reqBoolDef_ = value;
      return this;
    }
    public Builder clearReqBoolDef() {
      result.hasReqBoolDef = false;
      result.reqBoolDef_ = true;
      return this;
    }
    
    // optional bool opt_bool_def = 26 [default = false];
    public boolean hasOptBoolDef() {
      return result.hasOptBoolDef();
    }
    public boolean getOptBoolDef() {
      return result.getOptBoolDef();
    }
    public Builder setOptBoolDef(boolean value) {
      result.hasOptBoolDef = true;
      result.optBoolDef_ = value;
      return this;
    }
    public Builder clearOptBoolDef() {
      result.hasOptBoolDef = false;
      result.optBoolDef_ = false;
      return this;
    }
    
    // repeated int32 rep_int_pck = 27 [packed = true];
    public java.util.List<java.lang.Integer> getRepIntPckList() {
      return java.util.Collections.unmodifiableList(result.repIntPck_);
    }
    public int getRepIntPckCount() {
      return result.getRepIntPckCount();
    }
    public int getRepIntPck(int index) {
      return result.getRepIntPck(index);
    }
    public Builder setRepIntPck(int index, int value) {
      result.repIntPck_.set(index, value);
      return this;
    }
    public Builder addRepIntPck(int value) {
      if (result.repIntPck_.isEmpty()) {
        result.repIntPck_ = new java.util.ArrayList<java.lang.Integer>();
      }
      result.repIntPck_.add(value);
      return this;
    }
    public Builder addAllRepIntPck(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      if (result.repIntPck_.isEmpty()) {
        result.repIntPck_ = new java.util.ArrayList<java.lang.Integer>();
      }
      super.addAll(values, result.repIntPck_);
      return this;
    }
    public Builder clearRepIntPck() {
      result.repIntPck_ = java.util.Collections.emptyList();
      return this;
    }
    
    // repeated bool rep_bool_pck = 28 [packed = true];
    public java.util.List<java.lang.Boolean> getRepBoolPckList() {
      return java.util.Collections.unmodifiableList(result.repBoolPck_);
    }
    public int getRepBoolPckCount() {
      return result.getRepBoolPckCount();
    }
    public boolean getRepBoolPck(int index) {
      return result.getRepBoolPck(index);
    }
    public Builder setRepBoolPck(int index, boolean value) {
      result.repBoolPck_.set(index, value);
      return this;
    }
    public Builder addRepBoolPck(boolean value) {
      if (result.repBoolPck_.isEmpty()) {
        result.repBoolPck_ = new java.util.ArrayList<java.lang.Boolean>();
      }
      result.repBoolPck_.add(value);
      return this;
    }
    public Builder addAllRepBoolPck(
        java.lang.Iterable<? extends java.lang.Boolean> values) {
      if (result.repBoolPck_.isEmpty()) {
        result.repBoolPck_ = new java.util.ArrayList<java.lang.Boolean>();
      }
      super.addAll(values, result.repBoolPck_);
      return this;
    }
    public Builder clearRepBoolPck() {
      result.repBoolPck_ = java.util.Collections.emptyList();
      return this;
    }
    
    // repeated .Flags rep_flg_pck = 29 [packed = true];
    public java.util.List<Flags> getRepFlgPckList() {
      return java.util.Collections.unmodifiableList(result.repFlgPck_);
    }
    public int getRepFlgPckCount() {
      return result.getRepFlgPckCount();
    }
    public Flags getRepFlgPck(int index) {
      return result.getRepFlgPck(index);
    }
    public Builder setRepFlgPck(int index, Flags value) {
      if (value == null) {
        throw new NullPointerException();
      }
      result.repFlgPck_.set(index, value);
      return this;
    }
    public Builder addRepFlgPck(Flags value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (result.repFlgPck_.isEmpty()) {
        result.repFlgPck_ = new java.util.ArrayList<Flags>();
      }
      result.repFlgPck_.add(value);
      return this;
    }
    public Builder addAllRepFlgPck(
        java.lang.Iterable<? extends Flags> values) {
      if (result.repFlgPck_.isEmpty()) {
        result.repFlgPck_ = new java.util.ArrayList<Flags>();
      }
      super.addAll(values, result.repFlgPck_);
      return this;
    }
    public Builder clearRepFlgPck() {
      result.repFlgPck_ = java.util.Collections.emptyList();
      return this;
    }
    
    // @@protoc_insertion_point(builder_scope:HelloWorldProto)
  }
  
  static {
    defaultInstance = new HelloWorldProto(true);
    HelloWorld.internalForceInit();
    defaultInstance.initFields();
  }
  
  // @@protoc_insertion_point(class_scope:HelloWorldProto)
}

